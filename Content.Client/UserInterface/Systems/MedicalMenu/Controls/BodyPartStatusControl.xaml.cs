using Content.Shared.Body.Part;
using Content.Shared.FixedPoint;
using Content.Shared.Medical.Common;
using Content.Shared.Medical.Wounding.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.UserInterface.Systems.MedicalMenu.Controls;

[GenerateTypedNameReferences]
public sealed partial class BodyPartStatusControl : Collapsible
{

    private string _partName = "UnknownBodyPart";
    public string PartName
    {
        get => _partName;
        set
        {
            _partName = value;
            BodyPartLabel.Text = value;
        }
    }

    private Entity<BodyPartComponent,WoundableComponent>? _part = null;
    public Entity<BodyPartComponent,WoundableComponent>? LinkedPart => _part;


    private static readonly Color Healthy = Color.DarkGreen;
    private static readonly Color Unhealthy = Color.DarkRed;

    public BodyPartStatusControl()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        //setup chevron
        Chevron.AddStyleClass(OptionButton.StyleClassOptionTriangle);
    }

    public void SetPartCondition(FixedPoint2 conditionPercentage)
    {
        BodyPartStatusLabel.Text = SeverityHelper.GetVisibleConditionString(conditionPercentage);
        BodyPartStatusLabel.FontColorOverride = Color.InterpolateBetween( Unhealthy, Healthy,
            FixedPoint2.Clamp(conditionPercentage, 0, 1).Float());
    }

    public void LinkPart(Entity<BodyPartComponent,WoundableComponent>? newPart)
    {
        _part = newPart;
        if (newPart == null)
        {
            SetPartCondition(0);
            return;
        }
        SetPartCondition(newPart.Value.Comp2.HitPointPercent);
    }

    public void AddChildPart(BodyPartStatusControl childPart)
    {
        Contents.AddChild(childPart);
    }
}
