using Robust.Shared.GameStates;

namespace Content.Shared.Renamer.Components;

/// <summary>
/// Used to manage modifiers on an entity's name and handle renaming in a way
/// that survives being renamed by multiple systems.
/// </summary>
[RegisterComponent]
[NetworkedComponent, AutoGenerateComponentState(true)]
public sealed partial class RenamerComponent : Component
{
    /// <summary>
    /// The entity's name without any modifiers like prefixes, postfixes, or overrides.
    /// If you want to base a modifier on the entity's name, use this so that modifiers
    /// aren't duplicated.
    /// </summary>
    [DataField, AutoNetworkedField]
    public string BaseName = string.Empty;

    /// <summary>
    /// The entity's name with modifiers applied, as generated by this system on the server.
    /// This <i>should</i> match the metadata name, but since some systems might only add
    /// modifiers on the server, we use this to sync the final name to clients.
    /// </summary>
    [DataField, AutoNetworkedField]
    public string FullName = string.Empty;
}
